{"version":3,"sources":["store/dispatcher.ts","store/UserStore.ts","store/actions/userActions.ts","viewModels/UserWithErrorMessage.ts","components/navbar.component.tsx","components/map.component.tsx","components/home.component.tsx","components/register-user.component.tsx","components/login-user.component.tsx","components/contact.component.tsx","App.tsx","index.tsx"],"names":["Dispatcher","userStore","user","this","emit","action","type","setUser","EventEmitter","register","handleActions","bind","dispatcher","dispatch","User","username","pins","NavBar","props","clearUsername","state","localStorage","removeItem","setState","UserActions","on","name","getUser","undefined","className","to","style","color","onClick","React","Component","Map","popover","pin","Popover","id","Title","as","Content","lat","toFixed","long","getItem","description","handleUpdateShow","marginTop","marginRight","handleDeleteShow","handleShareShow","updateViewport","viewport","prevState","resize","height","window","innerHeight","width","innerWidth","convertMarkers","markers","slice","forEach","push","OverlayTrigger","rootClose","trigger","placement","overlay","latitude","longitude","offsetLeft","offsetTop","currentPin","src","alt","removeMarkers","addPin","event","newPin","lngLat","axios","post","handleUpdateClose","handleDeleteClose","handleShareAllClose","handleShareAllShow","onNewDescriptionChange","updatePin","deletePin","sharePin","shareAll","handleShareClose","zoom","showUpdateModal","showDeleteModal","showShareModal","showShareAll","newDescription","recipientUsername","userNotFound","value","addEventListener","get","then","response","data","removeEventListener","updatedPin","newPinList","filter","p","MySwal","withReactContent","Swal","fire","result","error","includes","catch","err","console","log","display","mapboxApiAccessToken","process","onViewportChange","v","Modal","show","onHide","Header","closeButton","Body","placeholder","onChange","e","target","Footer","Button","variant","onRecipientUsernameChange","fontWeight","paddingTop","Home","getUserFromLocalStorage","RegisterUser","onChangeUsername","onChangePassword","onSubmit","password","redirect","usernameError","preventDefault","setItem","marginLeft","required","length","paddingBottom","LoginUser","users","wrongUsername","wrongPassword","pathname","ContactUs","onChangeFirstName","onChangeLastName","onChangeEmail","onChangeMessage","firstName","lastName","email","message","status","method","url","buttonText","htmlFor","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02b49344.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher;","import { EventEmitter } from 'events';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\nimport Dispatcher from './dispatcher';\r\n\r\nclass UserStore extends EventEmitter {\r\n    user: User | null = null;\r\n     constructor(){\r\n         super();\r\n     }\r\n\r\n     setUser(user: User | null){\r\n        this.user = user;\r\n\r\n        this.emit(\"change\");\r\n     }\r\n\r\n     getUser(){\r\n         return this.user;\r\n     }\r\n\r\n     //not type safe\r\n     handleActions(action: any){\r\n        switch(action.type){\r\n            case \"SET_USER\": {\r\n                this.setUser(action.user);\r\n            }\r\n        }\r\n     }\r\n}\r\n\r\nconst userStore = new UserStore;\r\nDispatcher.register(userStore.handleActions.bind(userStore));\r\n\r\nexport default userStore;\r\n","import { User } from \"../../viewModels/UserWithErrorMessage\";\r\nimport dispatcher from \"../dispatcher\";\r\n\r\nexport function setUser(user: User) {\r\n    dispatcher.dispatch({\r\n        type: \"SET_USER\",\r\n        user,\r\n    });\r\n}","import Pin from './Pin'\r\n\r\nexport class UserWithErrorMessage{\r\n    user: User | null = null;\r\n    error: string = \"\";\r\n}\r\n\r\nexport class User {\r\n    username: string = \"\";\r\n    pins: Array<Pin> = []\r\n}","import React  from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userStore from '../store/UserStore';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface NavState {\r\n    username: string;\r\n}\r\n\r\nexport default class NavBar extends React.Component<IProps, NavState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.clearUsername = this.clearUsername.bind(this);\r\n        this.state = {\r\n            username: '',\r\n        }\r\n    }\r\n\r\n    clearUsername(){\r\n        localStorage.removeItem(\"user\");\r\n        this.setState({\r\n            username: \"\"\r\n        });\r\n        var user = new User();\r\n        user.username = '';\r\n        UserActions.setUser(user);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setState({\r\n        //     username: localStorage.getItem(\"user\")+''\r\n        // })\r\n        userStore.on(\"change\", () => {\r\n            var name = userStore.getUser()?.username;\r\n            if (name == undefined) {\r\n                name = '';\r\n            }\r\n            this.setState({\r\n                username: name\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"container topnav navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <NavLink to=\"/\" className=\"main_title navbar-brand\">MapPin</NavLink>\r\n                <div className=\"collpase navbar-collapse\">\r\n                {this.state.username == '' &&\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/contact\" className=\"nav-link\">Contact Us </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/login\" className=\"nav-link\">Log-In</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                {this.state.username != '' &&\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/\" className=\"nav-link\">Map </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/contact\" className=\"nav-link\">Contact Us </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/login\" className=\"nav-link\" onClick={this.clearUsername}> Logout {this.state.username}</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                    \r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { Button, Modal, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport ReactMapGL, { NavigationControl, Marker, MapEvent } from 'react-map-gl';\r\nimport Pin from '../viewModels/Pin';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface Viewport {\r\n    height: number,\r\n    latitude: number,\r\n    longitude: number,\r\n    width: number,\r\n    zoom: number,\r\n}\r\n\r\ninterface MapState {\r\n    viewport: Viewport\r\n    pins: Pin[],\r\n    markers: any[],\r\n    showUpdateModal: boolean,\r\n    showDeleteModal: boolean,\r\n    showShareModal: boolean,\r\n    showShareAll: boolean,\r\n    newDescription: string,\r\n    recipientUsername: string,\r\n    currentPin: Pin | null,\r\n    userNotFound: string\r\n}\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN || '';\r\n\r\nexport default class Map extends React.Component<IProps, MapState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n        this.handleUpdateShow = this.handleUpdateShow.bind(this);\r\n        this.handleUpdateClose = this.handleUpdateClose.bind(this);\r\n        this.handleDeleteShow = this.handleDeleteShow.bind(this);\r\n        this.handleDeleteClose = this.handleDeleteClose.bind(this);\r\n        this.handleShareAllClose = this.handleShareAllClose.bind(this);\r\n        this.handleShareAllShow = this.handleShareAllShow.bind(this);\r\n        this.onNewDescriptionChange = this.onNewDescriptionChange.bind(this);\r\n        this.updatePin = this.updatePin.bind(this);\r\n        this.deletePin = this.deletePin.bind(this);\r\n        this.sharePin = this.sharePin.bind(this);\r\n        this.shareAll = this.shareAll.bind(this);\r\n        this.handleShareShow = this.handleShareShow.bind(this);\r\n        this.handleShareClose = this.handleShareClose.bind(this);\r\n    \r\n        this.state = {\r\n            viewport: {\r\n                height: 400,\r\n                latitude: 39.4018552,\r\n                longitude: -76.602388,\r\n                width: 400,\r\n                zoom: 14,\r\n            },\r\n            pins: [],\r\n            markers: [],\r\n            showUpdateModal: false,\r\n            showDeleteModal: false,\r\n            showShareModal: false,\r\n            showShareAll: false,\r\n            newDescription: \"\",\r\n            currentPin: null,\r\n            recipientUsername: \"\",\r\n            userNotFound: \"\"\r\n        }\r\n    }\r\n\r\n    popover = (pin: Pin) => (\r\n        <Popover id=\"popover-basic\">\r\n          <Popover.Title as=\"h3\">Details</Popover.Title>\r\n          <Popover.Content>\r\n            Latitude: {pin.lat.toFixed(4)}\r\n            <br />\r\n            Longitude: {pin.long.toFixed(4)}\r\n            <br />\r\n            Current User: {localStorage.getItem(\"user\")}\r\n            <br />\r\n            <span>Description: {pin.description}</span>\r\n            <br />\r\n            <button className=\"btn btn-danger\" onClick={this.handleUpdateShow} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Update</button>\r\n            <button className=\"btn btn-danger\" onClick={this.handleDeleteShow} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Delete</button>\r\n            <button className=\"btn btn-danger\" onClick={this.handleShareShow} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Share</button>\r\n          </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    handleUpdateShow(){\r\n        this.setState({\r\n            showUpdateModal: true,\r\n        });\r\n    }\r\n    handleUpdateClose(){\r\n        this.setState({\r\n            showUpdateModal: false\r\n        });\r\n    }\r\n    handleDeleteShow(){\r\n        this.setState({\r\n            showDeleteModal: true,\r\n        });\r\n    }\r\n    handleDeleteClose(){\r\n        this.setState({\r\n            showDeleteModal: false\r\n        });\r\n    }\r\n    handleShareShow(){\r\n        this.setState({\r\n            showShareModal: true,\r\n        });\r\n    }\r\n    handleShareClose(){\r\n        this.setState({\r\n            showShareModal: false\r\n        });\r\n    }\r\n    handleShareAllShow(){\r\n        this.setState({\r\n            showShareAll: true,\r\n        });\r\n    }\r\n    handleShareAllClose(){\r\n        this.setState({\r\n            showShareAll: false\r\n        });\r\n    }\r\n\r\n    onNewDescriptionChange(value: string){\r\n        this.setState({\r\n            newDescription: value\r\n        })\r\n    }\r\n    onRecipientUsernameChange(value: string){\r\n        this.setState({\r\n            recipientUsername: value\r\n        })\r\n    }\r\n\r\n    public componentDidMount() {\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        window.addEventListener('resize', this.resize);\r\n        this.resize();\r\n        axios.get(path+'/users/username/' + localStorage.getItem(\"user\"))\r\n            .then(response => {\r\n                this.setState({\r\n                    pins: response.data.pins\r\n                })\r\n                this.convertMarkers();\r\n            })\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize);\r\n    }\r\n\r\n    public updateViewport = (viewport: Viewport) => {\r\n        this.setState(prevState => ({\r\n            viewport: { ...prevState.viewport, ...viewport },\r\n        }));\r\n    };\r\n\r\n    public resize = () => {\r\n        this.setState(prevState => ({\r\n            viewport: {\r\n                ...prevState.viewport,\r\n                height: window.innerHeight,\r\n                width: window.innerWidth,\r\n            },\r\n        }));\r\n    };\r\n\r\n    public convertMarkers = () => {\r\n        const markers = this.state.markers.slice();\r\n        this.state.pins.forEach(\r\n            (pin: Pin) => markers.push(\r\n                <OverlayTrigger rootClose trigger=\"click\" placement=\"bottom\" overlay={this.popover(pin)}>\r\n                    <Marker latitude={pin.lat} longitude={pin.long} offsetLeft={-20} offsetTop={-10}>\r\n                        <img onClick={() => this.setState({ currentPin: pin})} className=\"imageHover\" src=\"/assets/pin.jpg\" alt=\"Here\" style={{width: 35, height: 35}}/>\r\n                    </Marker>\r\n                </OverlayTrigger>\r\n            ))\r\n        this.setState({\r\n            markers: markers\r\n        })\r\n    }\r\n\r\n    public removeMarkers = () => {\r\n        var markers: any[] = [];\r\n        this.state.pins.forEach(\r\n            (pin: Pin) => markers.push(\r\n                <OverlayTrigger rootClose trigger=\"click\" placement=\"bottom\" overlay={this.popover(pin)}>\r\n                    <Marker latitude={pin.lat} longitude={pin.long} offsetLeft={-20} offsetTop={-10}>\r\n                        <img onClick={() => this.setState({ currentPin: pin})} className=\"imageHover\" src=\"/assets/pin.jpg\" alt=\"Here\" style={{width: 35, height: 35}}/>\r\n                    </Marker>\r\n                </OverlayTrigger>\r\n            ))\r\n        this.setState({\r\n            markers: markers\r\n        })\r\n    }\r\n\r\n    public addPin = (event: MapEvent) => {\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        const pins = this.state.pins.slice();\r\n        var newPin: Pin = {\r\n            name: `lng${event.lngLat[0]}`,\r\n            lat: event.lngLat[1],\r\n            long: event.lngLat[0],\r\n            description: 'Edit me!'\r\n        }\r\n        pins.push(newPin)\r\n        axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: pins\r\n            })\r\n        this.setState({\r\n            pins: pins\r\n            })\r\n        this.convertMarkers();\r\n    }\r\n\r\n    updatePin(){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        if(this.state.currentPin != undefined){\r\n            var updatedPin: Pin = {\r\n                description: this.state.newDescription,\r\n                lat: this.state.currentPin.lat,\r\n                long: this.state.currentPin.long,\r\n                name: 'temporary'\r\n            }\r\n            var newPinList: Pin[] = this.state.pins.filter(p => p.lat !== updatedPin.lat && p.long !== updatedPin.long);\r\n            newPinList.push(updatedPin);\r\n            const MySwal = withReactContent(Swal)\r\n            axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: newPinList\r\n            }).then((response) => {\r\n                this.setState({\r\n                    pins: newPinList\r\n                })\r\n                this.convertMarkers();\r\n                this.handleUpdateClose();\r\n                this.setState({\r\n                    currentPin: null,\r\n                    newDescription: \"\"\r\n                })\r\n                return MySwal.fire(<p>Pin Updated!</p>,<span><div>Your pin description has been updated to:</div><b>{updatedPin.description}</b></span>, \"success\");\r\n            });\r\n        }\r\n    }\r\n\r\n    deletePin(){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        if(this.state.currentPin != undefined){\r\n            var updatedPin: Pin = {\r\n                description: this.state.currentPin.description,\r\n                lat: this.state.currentPin.lat,\r\n                long: this.state.currentPin.long,\r\n                name: 'temporary'\r\n            }\r\n            var newPinList: Pin[] = this.state.pins.filter(p => p.lat !== updatedPin.lat && p.long !== updatedPin.long);\r\n            const MySwal = withReactContent(Swal)\r\n            axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: newPinList\r\n            }).then((response) => {\r\n                this.setState({\r\n                    pins: newPinList\r\n                })\r\n                this.handleDeleteClose();\r\n                this.setState({\r\n                    currentPin: null,\r\n                    newDescription: \"\"\r\n                });\r\n                this.removeMarkers();\r\n                return MySwal.fire(<p>Pin Deleted!</p>,<span><div>Your pin has successfully been deleted!</div></span>, \"success\");\r\n            });\r\n        }\r\n    }\r\n\r\n    sharePin(){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        if(this.state.currentPin != undefined){\r\n            var sharedPin: Pin = {\r\n                description: this.state.currentPin.description,\r\n                lat: this.state.currentPin.lat,\r\n                long: this.state.currentPin.long,\r\n                name: 'SharedPin'\r\n            }\r\n            var newPinList: Pin[] = [sharedPin];\r\n            const MySwal = withReactContent(Swal)\r\n            axios.post<UserWithErrorMessage>(path+'/users/share/username/' + this.state.recipientUsername, \r\n            {\r\n                username: this.state.recipientUsername,\r\n                pins: newPinList\r\n            }).then((result) => {\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"Username\")){\r\n                        this.setState({\r\n                            userNotFound: \"User was not found\"\r\n                        });\r\n                        return;\r\n                    }\r\n                    return MySwal.fire(<p>Uh Oh!</p>,<span>There was an unexpected error! Contact the MapPin team!</span>, \"error\");\r\n                }\r\n                else if(result.data.user === null){\r\n                    return MySwal.fire(<p>Error Occured!</p>,<span>User was not found</span>, \"error\");\r\n                }\r\n                else{\r\n                    this.handleShareClose();\r\n                    this.setState({\r\n                        currentPin: null,\r\n                        recipientUsername: \"\",\r\n                        userNotFound: \"\"\r\n                    })\r\n                    return MySwal.fire(<p>Pin Shared!</p>,<span><div>Your pin was successfully shared!</div></span>, \"success\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    shareAll(){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n            const MySwal = withReactContent(Swal)\r\n            axios.post<UserWithErrorMessage>(path+'/users/share/username/' + this.state.recipientUsername, \r\n            {\r\n                username: this.state.recipientUsername,\r\n                pins: this.state.pins\r\n            }).then((result) => {\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"Username\")){\r\n                        this.setState({\r\n                            userNotFound: \"User was not found\"\r\n                        });\r\n                        return;\r\n                    }\r\n                    return MySwal.fire(<p>Uh Oh!</p>,<span>There was an unexpected error! Contact the MapPin team!</span>, \"error\");\r\n                }\r\n                else if(result.data.user === null){\r\n                    return MySwal.fire(<p>Error Occured!</p>,<span>User was not found</span>, \"error\");\r\n                }\r\n                else{\r\n                    this.handleShareAllClose();\r\n                    this.setState({\r\n                        currentPin: null,\r\n                        recipientUsername: \"\",\r\n                        userNotFound: \"\"\r\n                    })\r\n                    return MySwal.fire(<p>Pin Shared!</p>,<span><div>Your pin was successfully shared!</div></span>, \"success\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    public render() {\r\n        const { viewport } = this.state;\r\n        const style = {\r\n            display: 'block',\r\n            'margin-left': 'auto',\r\n            'margin-right': 'auto'\r\n        }\r\n         return (\r\n             <span>\r\n                 <div style={{width: \"95%\"}}>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button className=\"btn btn-danger\" onClick={this.handleShareAllShow} type=\"button\">Share All</button>\r\n                    </div>\r\n                 </div>\r\n                <ReactMapGL\r\n                        {...viewport}\r\n                        height='80vh'\r\n                        width='90vw'\r\n                        style={ style }\r\n                        className=\"map-size\"\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        onViewportChange={(v: Viewport) => this.updateViewport(v)}\r\n                        onClick={(event: MapEvent) => this.addPin(event)}\r\n                    >\r\n                        {this.state.markers}\r\n                        <div>\r\n                            <NavigationControl onViewportChange={this.updateViewport} />\r\n                        </div>\r\n                    </ReactMapGL>\r\n\r\n                    <Modal show={this.state.showUpdateModal} onHide={this.handleUpdateClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Update Pin Information</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>Update the description of your pin:</div>\r\n                            <input type=\"text\"\r\n                                   placeholder={this.state.currentPin?.description}\r\n                                   value={this.state.newDescription}\r\n                                   onChange={e => this.onNewDescriptionChange(e.target.value)}></input>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleUpdateClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.updatePin}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.showDeleteModal} onHide={this.handleDeleteClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Pin</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <b>Are you sure you want to delete this pin?</b>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleDeleteClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"danger\" onClick={this.deletePin}>\r\n                                Delete\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.showShareModal} onHide={this.handleShareClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Share Pin</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>Enter the recipient's username:</div>\r\n                            <input type=\"text\"\r\n                                   placeholder={\"Recipient's username\"}\r\n                                   value={this.state.recipientUsername}\r\n                                   onChange={e => this.onRecipientUsernameChange(e.target.value)}></input>\r\n                            <div style={{color: 'red', fontWeight: 'bold', paddingTop: '0px'}}>\r\n                                {this.state.userNotFound}\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleShareClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.sharePin}>\r\n                                Share\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.showShareAll} onHide={this.handleShareAllClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Share Pins</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>Enter the recipient's username:</div>\r\n                            <input type=\"text\"\r\n                                   placeholder={\"Recipient's username\"}\r\n                                   value={this.state.recipientUsername}\r\n                                   onChange={e => this.onRecipientUsernameChange(e.target.value)}></input>\r\n                            <div style={{color: 'red', fontWeight: 'bold', paddingTop: '0px'}}>\r\n                                {this.state.userNotFound}\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleShareAllClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.shareAll}>\r\n                                Share All\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n            </span>\r\n            );\r\n        }\r\n    }","import React from 'react';\r\nimport Map from './map.component';\r\nimport { Redirect } from 'react-router-dom';\r\nimport userStore from '../store/UserStore';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport axios from 'axios';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface HomeState {\r\n    username: string | undefined;\r\n}\r\n\r\nexport default class Home extends React.Component<IProps, HomeState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            username: userStore.getUser()?.username\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        userStore.on(\"change\", () => {\r\n            let name = userStore.getUser()?.username;\r\n            if (name == undefined) {\r\n                this.setState({\r\n                    username: ''\r\n                });\r\n            }\r\n            else{\r\n                this.setState({\r\n                    username: name\r\n                });\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    getUserFromLocalStorage(username: string){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        axios.get<User>(`${path}/users/username/${username}`)\r\n            .then(result => {\r\n                UserActions.setUser(result.data);\r\n            })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        if ((this.state.username == \"\" \r\n        || this.state.username == undefined \r\n        || this.state.username == null)\r\n        && localStorage.getItem(\"user\") == null) {\r\n            return (\r\n                <Redirect push to='/register' />\r\n            );\r\n        }\r\n        else {\r\n            var username = localStorage.getItem(\"user\");\r\n            if(username != null && userStore.getUser() == null){\r\n                this.getUserFromLocalStorage(username);\r\n            }\r\n            return (\r\n                <div id=\"mapbox\" className=\"text-center\">\r\n                        <Map></Map>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport * as UserActions from '../store/actions/userActions';\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface RegisterState {\r\n    username: string;\r\n    password: string;\r\n    redirect: boolean;\r\n    usernameError: string;\r\n}\r\n\r\nclass RegisterUser extends React.Component<IProps, RegisterState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            redirect: false,\r\n            usernameError: ''\r\n        }\r\n    }\r\n\r\n    onChangeUsername(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            username: target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            password: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        this.setState({\r\n            usernameError: ''\r\n        })\r\n        const MySwal = withReactContent(Swal);\r\n        const user = { \r\n            username: this.state.username, \r\n            password: this.state.password \r\n        }\r\n        try{\r\n            axios.post<UserWithErrorMessage>(path+'/users/add', user)\r\n            .then(result => {\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"username is taken\")){\r\n                        this.setState({usernameError: result.data.error});\r\n                    }\r\n                    else {\r\n                        return MySwal.fire(<p>Login Failed</p>,<span>{result.data.error}</span>, \"error\");\r\n                    }\r\n                }\r\n                else if(result.data.user === null){\r\n                    return MySwal.fire(<p>Registration Failed</p>,<span>unexpected error occured</span>, \"error\");\r\n                }\r\n                else{\r\n                    UserActions.setUser(result.data.user);\r\n                    localStorage.setItem('user', result.data.user.username);\r\n                    this.setState({\r\n                        redirect: true\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        catch (err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginLeft: 'auto', marginRight: 'auto', width: '30%'}}>\r\n                { this.state.redirect ? (<Redirect push to='/'/>) : null }\r\n                <h3>Create Account</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <input  type=\"text\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                        {this.state.usernameError.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.usernameError}\r\n                        </div>\r\n                    }\r\n                    <label>Password: </label>\r\n                    <input  type=\"password\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default RegisterUser;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface LoginState {\r\n    username: string;\r\n    password: string;\r\n    users: { _id: string, username: string, password: string } [];\r\n    redirect: boolean;\r\n    wrongUsername: string;\r\n    wrongPassword: string;\r\n}\r\n\r\nclass LoginUser extends React.Component<IProps, LoginState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            users: [],\r\n            redirect: false,\r\n            wrongUsername: '',\r\n            wrongPassword: ''\r\n        }\r\n    }\r\n\r\n    onChangeUsername(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            username: target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            password: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        this.setState({wrongPassword: \"\", wrongUsername: \"\"});\r\n\r\n        const user = { \r\n            username: this.state.username, \r\n            password: this.state.password \r\n        }\r\n\r\n        axios.post<UserWithErrorMessage>(path+'/users/login', user)\r\n            .then(result => {\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"Username\")){\r\n                        this.setState({wrongUsername: result.data.error});\r\n                    }\r\n                    if(result.data.error.includes(\"Password\")){\r\n                        this.setState({wrongPassword: result.data.error});\r\n                    }\r\n                }\r\n                else if(result.data.user === null){\r\n                    const MySwal = withReactContent(Swal);\r\n                    return MySwal.fire(<p>Login Failed</p>,<span>User was not found</span>, \"error\");\r\n                }\r\n                else{\r\n                    UserActions.setUser(result.data.user);\r\n                    localStorage.setItem('user', result.data.user?.username);\r\n                    this.setState({\r\n                        redirect: true\r\n                    });\r\n                }\r\n            })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginLeft: 'auto', marginRight: 'auto', width: '30%'}}>\r\n                { this.state.redirect ? (<Redirect to={{pathname: \"/\" }}/>) : null }\r\n                <h3>Sign in to Your Account</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <input  type=\"text\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                    {this.state.wrongUsername.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.wrongUsername}\r\n                        </div>\r\n                    }\r\n                    <label>Password: </label>\r\n                    <input  type=\"password\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                    {this.state.wrongPassword.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.wrongPassword}\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default LoginUser;","import axios from 'axios';\r\nimport React from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\nclass ContactState {\r\n    firstName = \"\";\r\n    lastName = \"\";\r\n    email = \"\";\r\n    message = \"\";\r\n    status= \"\";\r\n}\r\n\r\nclass ContactUs extends React.Component<IProps, ContactState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeMessage = this.onChangeMessage.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            message: '',\r\n            status: \"Submit\"\r\n        }\r\n\r\n    }\r\n\r\n    onChangeFirstName(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            firstName: target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastName(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            lastName: target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            email: target.value\r\n        });\r\n    }\r\n\r\n    onChangeMessage(event: React.FormEvent<HTMLTextAreaElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            message: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        const MySwal = withReactContent(Swal)\r\n        this.setState({ status: \"Sending\" });  \r\n        axios({\r\n          method: \"POST\",\r\n          url: path+\"/users/contact\",\r\n          data: this.state,\r\n        }).then((response) => {\r\n          if (response.data.status === \"sent\") {\r\n            this.setState({ firstName: \"\", lastName: \"\", email: \"\", message: \"\", status: \"Submit\" });\r\n            return MySwal.fire(<p>Message Sent!</p>,<span>Thank you for your email, we look forward to hearing from you!</span>, \"success\");\r\n          } else if (response.data.status === \"failed\") {\r\n            return MySwal.fire(<p>Message Failed!</p>,<span>Uh oh! Something went wrong and we did not recieve your message</span>, \"error\");\r\n          }\r\n        });\r\n      }\r\n\r\n    render(){\r\n        let buttonText = this.state.status;\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                    <h1 className=\"page_title\">Contact the&nbsp;</h1>\r\n                    <h1 className=\"main_title\">Map-Pin</h1>\r\n                    <h1 className=\"page_title\">&nbsp;Team</h1>\r\n                </div>\r\n                <div style={{marginTop: \"18px\"}}>\r\n                <div className=\"inner_navcontainer\">\r\n                    <div className=\"inner_contactcontainer\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <label htmlFor=\"fname\">First Name</label>\r\n                            <input type=\"text\" \r\n                            id=\"fname\" \r\n                            name=\"firstname\" \r\n                            placeholder=\"Your first name...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChangeFirstName}></input>\r\n\r\n                            <label htmlFor=\"lname\">Last Name</label>\r\n                            <input type=\"text\" \r\n                            id=\"lname\" \r\n                            name=\"lastname\" \r\n                            placeholder=\"Your last name...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChangeLastName}></input>\r\n\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"Your e-mail...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}></input>\r\n\r\n                            <label htmlFor=\"message\">What do you need to share?</label>\r\n                            <textarea id=\"message\" \r\n                            name=\"message\" \r\n                            placeholder=\"Write your message here...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.message}\r\n                            onChange={this.onChangeMessage}></textarea>\r\n\r\n                            <button type=\"submit\" style={{marginTop: \"20px\"}}>{buttonText}</button>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default ContactUs;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Navbar from \"./components/navbar.component\";\r\nimport Home from \"./components/home.component\";\r\nimport RegisterUser from \"./components/register-user.component\";\r\nimport LoginUser from \"./components/login-user.component\";\r\nimport ContactUs from \"./components/contact.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <br/>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/register\" exact component={RegisterUser} />\r\n      <Route path=\"/login\" exact component={LoginUser} />\r\n      <Route path=\"/contact\" exact component={ContactUs} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}